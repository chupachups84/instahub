spring:
  application:
    name: instahub-app
  kafka:
    bootstrap-servers:
      - http://localhost:29092
    producer:
      retries: 1
      # Сериализация сообщений
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      # Транзакционность продюсера
      transaction-id-prefix: ${spring.application.name}-${random.uuid}-
  jpa:
    database: postgresql
    hibernate:
      ddl-auto: validate
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: postgres
  liquibase:
    contexts: ${liquibase.contexts}
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/postgres
    user: postgres
    password: postgres

user:
  uri: api/v1/users
  errors:
    not-found: "user not found"
auth:
  uri: api/v1/auth
photo:
  uri: api/v1/photos
photo-upload:
  uri: api/v1/photos/upload

kafka:
  topic:
    photo: photo

storage:
  service:
    url: http://localhost:8081/api/v1

#JWT
jwt:
  signing-key: aW5zdGFodWIoY2h1cGFjaHVwczg0LGs0cjNsMW5zLHN3dHk0NSxpcmluYWZlZG9yb3ZpY2gxOTk1KQ==
  expiration:
    access-token: 86400000 # 1 day
    refresh-token: 604800000 # 1 week

server:
  port: 8080
